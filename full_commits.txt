e1cc79b - Ivanilson Ferreira
first commit

---
ac76efc - Ivanilson Ferreira
chore: backend shell fully functional and typed
- Set up Express server with CORS and JSON parsing
- Typed all request/response handlers using TypeScript
- Loaded environment variables via dotenv
- Created base GET / route with test message
- Added .env.example with Hugging Face vars
- Added full .gitignore at project root

---
564687d - Ivanilson Ferreira
chore: Tailwind CSS fully configured and tested on frontend
- Installed Tailwind CSS, PostCSS, Autoprefixer, and @tailwindcss/postcss plugin
- Manually created and updated postcss.config.js for Tailwind v4 compatibility
- Added base Tailwind directives to index.css (@tailwind base, components, utilities)
- Rendered styled test title in App.tsx to confirm working setup
- Verified output in browser at localhost with full Tailwind rendering

---
aa24bf8 - Ivanilson Ferreira
feat: initial styled chat widget layout with Tailwind
- Created  component styled like a floating window
- Positioned bottom-right with fixed layout
- Added minimize and close buttons using Lucide icons
- Implemented scrollable chat with custom scrollbar
- Welcome message and working input field included
- Preserved 'ðŸ”¥ FURIA Fan Chat ðŸ”¥' header in main page

---
8d8f2d3 - Ivanilson Ferreira
feat: initial working chatbot integration with flan-t5-base
- Connected frontend chat with Hugging Face backend using public model
- Confirmed basic text-to-text responses working via API
- Added async message sending + bot reply flow
- Temporarily using flan-t5-base due to free-tier constraints
- Ready to iterate or upgrade model from stable point

---
f644f5d - Ivanilson Ferreira
feat(ai): update model to Mistral-7B-Instruct-v0.3 via Hugging Face
- Replaced previous model endpoint with mistralai/Mistral-7B-Instruct-v0.3
- Adjusted request headers for compatibility with Hugging Face Inference API
- Verified API response structure and updated logic to extract `generated_text` field
- Added test prompts to validate integration

---
f17ec31 - Ivanilson Ferreira
feat(bot): enable contextual AI responses using current roster data
- Integrated JSON-based context injection into Hugging Face request
- Updated backend /ask.ts route to read data from current_roster.json
- Formatted prompt with question and dynamic roster context
- Improved bot responses with real-time, accurate info

---
b85909d - Ivanilson Ferreira
- Decommissioned custom backend (Node.js + Express + Hugging Face integration) - Deleted legacy backend structure:   - /backend/src/routes/ask.ts and roster.ts   - /backend/data/roster/current_roster.json   - /backend/scripts related to scraping roster   - /backend/.env and Hugging Face environment variables (HF_API_KEY, HF_MODEL_URL) - Removed local RAG (Retrieval-Augmented Generation) approach based on current roster - Migrated frontend to Botpress Cloud Webchat integration - Updated frontend to dynamically load Botpress Webchat via component (FuriaFanWebchat.tsx) - Updated App.tsx layout to reflect new Botpress-based chat interaction - Confirmed contextual knowledge retrieval working natively via Botpress Knowledge Bases - Removed unused ChatWidget.tsx and Hugging Face-specific code - Cleaned project dependencies and node_modules to remove unused backend packages - Marked this commit as the official migration from Hugging Face API to Botpress Cloud infrastructure

---
ed916e2 - Ivanilson Ferreira
feat(frontend): add NewsCarousel component with banners
- Created NewsCarousel.tsx with dynamic banner loading (banner-1.webp, banner-2.webp)
- Integrated NewsCarousel after Hero section in LandingPage
- Setup simple manual navigation (next/prev arrows) and smooth transitions
- Focused on structure, no visual polish yet (to be improved later)

---
0c97369 - Ivanilson Ferreira
feat(ui): polish Header component to match FURIA.gg branding and behavior

---
838f013 - Ivanilson Ferreira
feat: restore and isolate working Header component
- Restored Header with inline styles to ensure visual consistency
- Removed broken imports and disabled unstable components
- LandingPage shows static content for testing
- Marked broken components as .txt to avoid runtime issues

---
aa06394 - Ivanilson Ferreira
feat(frontend): implement FanThreadChat system and layout polishing
- Created FanThreadChat.tsx with support for nick input, localStorage persistence and reply threads
- Added upvote/downvote logic on parent and child messages
- Integrated @emoji-mart/react for emoji picker with input injection
- Used mock data via threadChatMock.json as initial dataset
- Positioned chat section with styled borders, spacing and scrollable layout
- Refactored structure to match new LandingPage flow
- Removed unused floating/chat components after integration
- Applied minor fixes to header spacing and carousel overflow issues

---
69fe733 - Ivanilson Ferreira
feat(frontend): custom panther chat toggle with white circular background
- Replaced default Botpress chat trigger with a custom FURIA panther image
- Styled the new trigger with a white circular background and soft shadow for better contrast
- Ensured higher z-index to stay above Botpress default elements
- Fixed position at bottom-right (64x64px), perfectly aligned over the original chat bubble
- Botpress script logic remains untouched â€” no toggle or behavior changes applied

---
b8985a6 - Ivanilson Ferreira
feat(frontend): improve NewsCarousel styles and visual integration
- Adjusted CSS styles to better match FURIA branding and align with site structure
- Refined layout spacing and responsiveness of banners
- Ensured proper alignment of carousel controls and visual cohesion with background

---
ceb12cc - Ivanilson Ferreira
feat(frontend): dynamic NewsCarousel with glob-imported banners from assets
- Refactored NewsCarousel to use  for loading any banner format
- Moved all banner assets to
- Preserved timed auto-slide transition with Tailwind styles
- Connected pagination component for visual feedback (currently minimal)

---
10566c1 - Ivanilson Ferreira
feat(carousel): implement basic pagination with current slide indicator
- Added  component to handle slide bullets
- Implemented current slide detection using nested div with white border
- Positioned pagination outside the carousel with absolute layout
- Uses fallback visual style (white bordered dot) until full styling is revisited

---
67df0bf - Ivanilson Ferreira
feat(frontend): add group fan thread chat component with reactions and emoji picker
- Created FanThreadChat.tsx with support for top-level messages and threaded replies
- Implemented persistent state using localStorage and fallback to mock JSON
- Added nickname selection step with input validation and controlled state
- Integrated emoji picker using @emoji-mart/react with direct emoji insertion
- Styled layout with TailwindCSS: rounded containers, subtle shadows and responsive design
- Enabled reactions (like/dislike) for messages and replies
- Fixed emoji picker overlay issue by refactoring layout structure with flex-based alignment
- Component ready for future backend sync and fan ranking features

---
ff924fd - Ivanilson Ferreira
feat(auth): implement Google login flow and protected profile page
- Configured Firebase Auth with Google provider
- Created .env with valid Firebase credentials
- Built login page with layout based on FURIA store
- Protected /perfil route using AuthContext and redirect
- Created user profile page with avatar, name and email
- Fixed environment bugs and popup auth issues

---
fd16987 - Ivanilson Ferreira
style(chat): improve message bubble spacing, replies and button design
- Applied rounded and spaced bubble layout to messages
- Styled replies with soft white background and subtle borders
- Enhanced like/dislike buttons to match message wrapper visual style
- Adjusted chat positioning closer to carousel with mt-[25px]
- Tuned overall layout for a clean and readable fan thread chat

---
f69bcb8 - Ivanilson Ferreira
feat(header): add avatar menu with profile access and logout
- Show user photo when logged in
- Dropdown menu on hover with profile and logout
- Restored shopping bag icon with link to furia.gg
- Fixed login redirect after logout

---
aed7cb1 - Ivanilson Ferreira
feat(header): make header global and add home redirect on logo
- Header component now visible on all routes
- Added clickable logo that navigates to '/' (LandingPage)
- Ensured layout padding with pt-[76px] to avoid overlap

---
1dfaff0 - Ivanilson Ferreira
feat(carousel): enable manual navigation by clicking on pagination dots
- Added onDotClick prop to NewsCarouselPagination
- Connected dot click to slide change via setCurrent
- Preserved all existing layout and animation behavior

---
915bc5f - Ivanilson Ferreira
feat(profile): initial user area layout with internal routes
- Created persistent layout with avatar, name, and email
- Added internal routes: /info, /awards, /metrics
- Stub components for each profile section
- Functional sidebar navigation (styling to follow)

---
279252d - Ivanilson Ferreira
style: polish sidebar layout and buttons for smoother UI
- Changed sidebar background to #f9f9f9
- Added soft outer shadow to sidebar (rgba(0,0,0,0.06))
- Updated profile menu buttons:
  - Removed native borders and outlines
  - Lightened default color to #f2f2f2 with hover #ebebeb
  - Applied rounded corners (6px) and subtle shadow
  - Preserved isActive state and interaction transitions

---
9b2a81b - Ivanilson Ferreira
feat(profile): implement full editable profile info layout
- Created two-column responsive layout for profile information
- Added editable fields: nickname, custom avatar URL, bio, city, birthdate, and CPF
- Included progress bar with completion percentage logic
- Styled all inputs and button with Helvetica World-like appearance
- Preserved spacing, hover/active effects, and responsive behavior

---
c077cfd - Ivanilson Ferreira
feat(profile): add metrics and awards pages with mocked data
- Created ProfileAwards.tsx with mocked list of achievements
- Created ProfileMetrics.tsx with sample engagement statistics
- Applied consistent layout and spacing matching profile info section
- Data is mocked for now and will be replaced by real backend responses later

---
7c8b94d - Ivanilson Ferreira
feat(admin): enable mock dashboard access for admins only
- Added new admin-only route: /perfil/dashboard
- Mocked sample stats (total users, posts, likes, most liked post)
- Admin visibility based on email match in context
- Sidebar dynamically includes 'Dashboard de UsuÃ¡rios' for admins
- Route hidden from non-admin users (verified OK)

---
d949286 - Ivanilson Ferreira
fix(api): align user controller and routes with Express types
- Fixed return types in getUser and patchUser to strictly return `void`
- Wrapped all router handlers in arrow functions to satisfy Express overloads
- Resolved TS(2322) and TS(2769) errors related to type mismatch in response returns
- Ensured controller compatibility with strict TypeScript settings

---
e21bb14 - Ivanilson Ferreira
fix(profile-awards): type error on useState with mock awards
- Defined 'Award' type with icon, name, and date fields
- Applied 'Award[]' type to useState to resolve TS 'never[]' issues
- Fixed all property access errors related to missing types

---
a8d784f - Ivanilson Ferreira
feat(auth): auto-create user on Google login
- Added POST /users route to trigger user creation if missing
- Implemented createUserIfMissing in model with fallback fields
- Updated Login component to call backend after signInWithPopup
- Confirmed data persists with minimal fields in MySQL users table

---
56aafe6 - Ivanilson Ferreira
feat(auth+profile): create user on login and update full profile
- Implemented user creation via Google login if not existing
- Synced frontend with backend using POST /users and PATCH /users/:id
- Stored additional profile fields: bio, city, birthdate, and CPF
- Set verified and profile_completed flags based on input
- Validated CPF format and ensured DB compatibility

---
fac56d3 - Ivanilson Ferreira
feat(profile): finalize full profile persistence and retrieval
- Completed two-way data binding for all profile fields (nickname, photo, bio, city, birthdate, CPF, CEP)
- Normalized CEP format and persisted correctly in the database
- Updated backend model (updateUserProfile) to support CEP
- Ensured backend controller includes CEP in update and validation
- Fixed fetch logic to display masked values on load
- Synced frontend inputs with backend PATCH flow
- Confirmed DB reflects all updates accurately

---
facb90f - Ivanilson Ferreira
feat(awards): display profile achievements with backend integration
- Corrigida tipagem dos mÃ©todos de premiaÃ§Ã£o para aceitar user_id como string
- Ajustado middleware CORS para permitir requests com credenciais do frontend
- Corrigida importaÃ§Ã£o no awardsRoutes para uso direto das funÃ§Ãµes controllers
- ExibiÃ§Ã£o de prÃªmios funcionais no componente ProfileAwards com dados do backend
- Adicionados Ã­cones, datas formatadas e layout responsivo com Tailwind

---
440f613 - Ivanilson Ferreira
feat(metrics): display real awards count in profile metrics
- Updated ProfileMetrics component to show total number of awards
- Normalized type definitions to match backend response
- Metrics panel now includes: total posts, likes, top post, streak, active days, createdAt, profile completion, and awards count (mocked/real as applicable)

---
15008b5 - Ivanilson Ferreira
feat(dashboard): implement full dashboard layout with Tailwind and mock data
- Created visually striking admin dashboard with recharts (PieChart, BarChart, AreaChart)
- Displayed key stats: users, posts, likes, top post likes
- Included charts for age groups, state distribution, top hashtags and activity streak
- Used Tailwind 100% for layout, spacing, color, and typography
- Styled with dark mode gradients and custom color palette

fix(css): remove inline styles and restore Tailwind across app

- Removed all style={{ ... }} from layout and components
- Eliminated hardcoded fontFamily and spacing overrides
- Fixed global text color override (white text bug) in index.css
- Refactored Layout component to use Tailwind padding for sidebar offset
- Re-enabled full screen height and width for body, html, and #root in index.css
- Added 'Helvetica World' to Tailwind config as custom font

fix(thread): restore Tailwind styles and fix invisible text bug

- Fixed missing nickname state in FanThreadChat
- Emoji picker now works smoothly with input
- Messages and replies styled consistently via Tailwind
- Layout spacing adjusted with gap utilities and flexbox
- No more CSS gambiarras ðŸŽ‰

---
cb823cf - Ivanilson Ferreira
feat(dashboard): full visual overhaul of metrics and chart components
- Unified dark color scheme across all dashboard cards (stats, charts, pies)
- Applied new visual theme with #111827 background and soft lilac text accents
- Added subtle hover scaling effect on all data cards
- Reorganized layout to prioritize activity and hashtag charts at the top
- Increased chart sizes and container heights for better visual impact
- Included dynamic titles below each chart with matching highlight colors
- Applied margin-top spacing to top block to avoid visual overlap

---
2ec388f - Ivanilson Ferreira
style(awards): apply new layout inspired by dashboard stats
- Applied dark theme background and vibrant text color scheme (#111827, #a855f7, #c084fc)
- Adjusted award cards to match StatBox proportions (48% width, 275px height)
- Increased award icon size for visual emphasis (text-6xl)
- Enabled responsive two-column layout for awards
- Added external wrapper with 30px top margin to match dashboard spacing

---
56551e3 - Ivanilson Ferreira
style(metrics): finalize metrics layout with responsive two-column scrollable card grid
- Applied fixed height and vertical scroll area for metrics
- Converted metrics list to flex layout with wrap and spacing
- Ensured two-column layout on all viewports with consistent card size
- Adjusted margin and padding to prevent overlap with sidebar
- Matched visual style with dashboard and awards section

---
1445e17 - Ivanilson Ferreira
feat(chat): render FanThreadChat only for logged-in users and fetch nickname
- Applied conditional rendering using {user && <FanThreadChat />} inside LandingPage
- Imported useAuth and getUserProfile into FanThreadChat
- Automatically fetched nickname from user profile (via UID) to replace manual input
- Removed nick input UI, chat now always visible for authenticated users

---
42e6fb1 - Ivanilson Ferreira
feat(chat): fully integrated FanThreadChat with backend
- Removed mock messages and localStorage dependency
- Messages, replies, likes and dislikes now persist via backend API
- Ensured nickname is fetched from logged-in profile
- Confirmed DB sync with live MySQL check
- EmojiPicker behavior improved (position + usability)

---
ebd775d - Ivanilson Ferreira
fix(chat): emoji picker crash on main input resolved
- Defined proper type for 'emoji' object returned from Picker component
- Added missing 'handleEmojiSelect' function for main input field
- Removed duplicate 'handleReact' function declaration
- Chat component now renders correctly without runtime error

---
60a924c - Ivanilson Ferreira
feat(dashboard): integrate real metrics from backend
- Displays real user, post, like, and top post metrics
- Renders hashtag and streak charts using backend data
- Replaces mockStats with live API connection
- Full backend-frontend integration with typing

---
6bd94f4 - Ivanilson Ferreira
fix(metrics): correct totalLikes string concatenation bug
- Converted totalLikes values to numbers using Number() to prevent string concatenation
- Now displays actual like count correctly (e.g. 12 instead of 01200)
- Verified on dashboard after new interactions

---
7a1e3b2 - Ivanilson Ferreira
feat(demographics): add real-time age and state distribution from user profiles
- Parsed age groups based on birthdate into defined ranges
- Extracted Brazilian state (UF) from 'city - UF' format for distribution chart
- Updated getUserDemographics() to use real data, eliminating need for CEP prefix mapping
- Enabled accurate and live data for PieCharts in the admin dashboard

---
da2a423 - Ivanilson Ferreira
feat(dashboard): fully implement live streak chart with real message data
- Transformed ISO dates into dd/mm format to match mock chart appearance
- Ensured chronological order for AreaChart rendering using  by date
- Replaced direct  access with formatted  for clarity
- Injected backdated messages with realistic volume distribution across 27/04 to 04/05
- Boosted peaks on 28/04 and 01/05 to create an engaging activity curve
- Added supporting hashtags like #FuriaGG, #GoFURIA and #VaiFuria without affecting top tag

---
aa70a07 - Ivanilson Ferreira
fix(header): improve avatar dropdown usability with adjusted offset
- Aligned dropdown menu slightly to the right using left offset and margin
- Increased dropdown width to reduce hover precision requirement
- Added extra padding to bottom for smoother mouse leave transition

---
6258704 - Ivanilson Ferreira
feat(chat): full overhaul of FanThreadChat with avatars, alignment, and replies
- Added WhatsApp-style layout: user messages on the right, others on the left
- Displayed user avatar next to nickname on messages
- Reimplemented nested reply system under each message
- Restored scrollable message area inside chat box
- Preserved all previous messages and functionalities

---
ee6d62e - Ivanilson Ferreira
feat(chat): render correct avatar for each user in FanThreadChat
- Updated message query to include profile_image from users table
- Passed profile_image in each message object returned from backend
- Adjusted frontend message rendering to use msg.profile_image if available
- Preserved fallback to /default-avatar.png when image is missing

---
439715a - Ivanilson Ferreira
feat(metrics): replace mock metrics with real backend data
- Implemented real-time metrics retrieval from backend via /users/:id/metrics
- Removed mock values from getUserMetrics service
- Enhanced accuracy for: total posts, likes, top post, streak, and active days
- Confirmed visual match with actual user activity (dashboard cross-check)

---
f0aa4e6 - Ivanilson Ferreira
feat(chat): merge visual refinements with working FanThreadChat
- Reintegrated message layout with working functionality from original version
- Positioned user avatars inside message bubbles (left/right based on sender)
- Reduced profile image size to 20% for better balance in bubble layout
- Restored like/dislike buttons within message structure
- Maintained reply toggle and message grouping logic
- Preserved working backend integration with enhanced visuals

---
64d1239 - Ivanilson Ferreira
refactor(chat): extracted MessageBubble to separate component
- Created standalone MessageBubble component for improved modularity
- Replaced inline JSX in FanThreadChat with reusable component
- Preserved avatar logic and trophy condition inside bubble
- Passed reactions and replies as children for flexibility

---
1e3e163 - Ivanilson Ferreira
feat(chat): improved message bubble layout and spacing
- Increased message bubble width to 80% and height by ~30%
- Added bottom margin (20px) to better separate messages
- Applied modern shadow and hover scale effect
- Enlarged profile images and repositioned them outside the bubble
- Applied Helvetica World font for consistent UX

---
006e905 - Ivanilson Ferreira
feat(bubble): centralize reply toggle logic inside MessageBubble component
- Moved <details> toggle behavior from FanThreadChat to MessageBubble
- Each bubble now manages its own reply visibility
- Decoupled UI logic between chat thread and message bubble
- Prepares the component for future visual and interactive enhancements

---
9b75dd6 - Ivanilson Ferreira
feat(chat): extract reply thread logic into <ReplyBubble> component
- Replaced inline <details> block in FanThreadChat with <ReplyBubble>
- Centralized reply UI, input, emoji picker, and list of replies in new component
- Improved readability and modularity of chat message structure
- Enabled cleaner separation of parent vs. reply messages

---
a1ada10 - Ivanilson Ferreira
feat(chat): add reply count badge to toggle replies button
- Encapsulated the reply toggle button with a red numeric badge indicator
- Inline style applied to ensure consistent badge visibility over dark backgrounds
- Helps users visually identify messages that already have replies

---
d8a8a68 - Ivanilson Ferreira
style(ui): apply FURIA Store font across all chat and profile components
- Applied 'Helvetica World' font globally to FanThreadChat, MessageBubble, and ReplyBubble
- Standardized typography for all buttons, inputs, reply fields, and headers
- Ensured visual consistency across all user interaction areas
- Improved polish and alignment with the official FURIA Store design

---
45c5fec - Ivanilson Ferreira
feat(chat): refine padding and center message text in chat bubbles
- Replaced Tailwind paddings with inline styles for precise control
- Vertically and horizontally centered the message text
- Increased top padding to prevent avatar overlap
- Ensured the bubble expands proportionally with content
- Preserved original rounded layout and responsiveness

---
763a986 - Ivanilson Ferreira
[200~feat(chat): align avatar and nickname with consistent spacing
- Reduced profile image size for better balance on message bubbles
- Positioned nickname horizontally aligned with avatar (left/right depending on message)
- Preserved all existing logic for reactions, replies, and layout
- Improved visual harmony and padding between elements
~

---